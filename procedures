create PROCEDURE search_users(argument VARCHAR2)
    AUTHID CURRENT_USER IS
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE temp_users';
    EXECUTE IMMEDIATE 'CREATE TABLE temp_users AS SELECT * FROM users WHERE 1=0';

    FOR user_i IN (SELECT * FROM users WHERE UPPER(name) LIKE '%' || UPPER(argument) || '%' OR
                                          UPPER(surname) LIKE '%' || UPPER(argument) || '%' OR
                                          UPPER(login) LIKE '%' || UPPER(argument) || '%')
    LOOP
        INSERT INTO temp_users VALUES (user_i.user_id, user_i.name, user_i.surname, user_i.birthdate, user_i.sex, user_i.login, user_i.pin);
    END LOOP;
END;


create PROCEDURE search_currencies(argument VARCHAR2)
    AUTHID CURRENT_USER IS
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE temp_currencies';
    EXECUTE IMMEDIATE 'CREATE TABLE temp_currencies AS SELECT * FROM currencies WHERE 1=0';

    FOR currency_i IN (SELECT * FROM currencies WHERE UPPER(currency) LIKE '%' || UPPER(argument) || '%')
    LOOP
        INSERT INTO temp_currencies VALUES (currency_i.currency_id, currency_i.currency, currency_i.usd_conversion);
    END LOOP;
END;


create PROCEDURE update_currency(argument1 VARCHAR2, argument2 FLOAT, argument3 NUMBER)
    AUTHID CURRENT_USER IS
BEGIN
    IF argument2 < 0 THEN
    RAISE_APPLICATION_ERROR(-20001, 'Value cannot be negative');
    END IF;

    UPDATE currencies SET CURRENCY = argument1, USD_CONVERSION = argument2 WHERE CURRENCY_ID = argument3;
    COMMIT;

    EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error occurred.');
    RAISE;
END;
/



TO BY BYŁO SPOKO ALE CIĘŻKO
*********************************************************
CREATE OR REPLACE PROCEDURE search_currencies(
    argument IN VARCHAR2
) AUTHID CURRENT_USER IS
BEGIN
    BEGIN
        -- Check if the temporary table already exists, if not, create it
        EXECUTE IMMEDIATE 'CREATE GLOBAL TEMPORARY TABLE temp_currencies(
            currency_id NUMBER,
            currency VARCHAR2(100),
            usd_conversion FLOAT
        ) ON COMMIT DELETE ROWS';
    EXCEPTION
        WHEN OTHERS THEN
            IF SQLCODE != -955 THEN
                RAISE;
            END IF;
    END;

    -- Clear the contents of the temporary table
    EXECUTE IMMEDIATE 'TRUNCATE TABLE temp_currencies';

    -- Insert data into the temporary table
    FOR currency_i IN (
        SELECT * FROM currencies
        WHERE UPPER(currency) LIKE '%' || UPPER(argument) || '%'
    )
    LOOP
        INSERT INTO temp_currencies (
            currency_id,
            currency,
            usd_conversion
        ) VALUES (
            currency_i.currency_id,
            currency_i.currency,
            currency_i.usd_conversion
        );
    END LOOP;
END;
/
**********************************
